{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" 欢迎加入qq群（qq群号:337087493）进行学习交流探讨 \", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" 请在下面文本框输入详细的描述性文字（prompt）来生成你想要的图片 \", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.msg), 1 /* TEXT */), _hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.prompt = $event),\n    placeholder: \"Type here\",\n    style: {\n      width: '1200px',\n      height: '20px'\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.prompt]]), _createCommentVNode(\"<button @click=\\\"question()\\\">生成</button>\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.generate && $options.generate(...args))\n  }, \"生成图片\"), !$data.answer ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Loading...\")) : _createCommentVNode(\"v-if\", true), !$data.answer ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    class: \"loading\",\n    src: require('@/assets/loading.gif'),\n    alt: \"loading GIF\"\n  }, null, 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"img\", {\n    class: \"image\",\n    src: $data.image\n  }, null, 8 /* PROPS */, _hoisted_6)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$props","msg","_hoisted_2","_hoisted_3","$data","prompt","$event","placeholder","style","width","height","_createCommentVNode","onClick","_cache","args","$options","generate","answer","_hoisted_4","src","require","alt","image"],"sources":["/home/xh/vue-pic/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>{{ msg }}</h1>\n    <p>\n      欢迎加入qq群（qq群号:337087493）进行学习交流探讨\n    </p>\n    <p>\n      请在下面文本框输入详细的描述性文字（prompt）来生成你想要的图片\n    </p>\n    <input v-model=\"prompt\" placeholder=\"Type here\" :style=\"{ width: '1200px', height: '20px' }\">\n    <!--<button @click=\"question()\">生成</button>-->\n    <button @click=\"generate\">生成图片</button>\n    <p v-if=\"!answer\">Loading...</p>\n    <img v-if=\"!answer\"  class=\"loading\" :src=\"require('@/assets/loading.gif')\" alt=\"loading GIF\">\n    <img  class=\"image\" :src=\"image\">\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nconst requests = axios.create({\n  baseURL: \"/api\",\n  timeout: 1000000,\n});\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      prompt: \"Type here\",\n      answer: 1,\n      image: ''\n    }\n  },\n\n  methods: {\n    async getPicture() {\n      this.answer = 0\n      try {\n      /*requests.get('/').then((response) => {\n        window.console.log(response)\n        this.answer = response.data\n      })*/\n      requests.get('/image',{\n        params: {    //有参数时\n        prompt: this.prompt\n      }\n      }).then((response) => {\n        //window.console.log(response)\n        window.console.log(response.data.datas)\n        this.image = \"data:image/png;base64,\"+ response.data.datas\n        window.console.log(this.image)\n        this.answer = 1\n      })\n      } catch (error) {\n        this.answer = 'Error! Could not reach the API. ' + error\n      }\n    },\n    generate(){  \n        window.console.log(this.prompt)\n        this.getPicture()\n    }\n  },\n  mounted() {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ninput {\n  font-size: 16px;  /* 设置字体大小 */\n  border-radius: 4px; /* 设置圆角半径 */\n  padding: 4px; /* 设置内边距 */\n  border: 2px solid gray; /* 边框设置 */\n}\n.container {\n  position: relative; /* 设置容器为相对定位 */\n}\n\n\n.image {\n  display: block; /* 将 image 设置为块级元素 */\n  margin: 0 auto; /* 居中对齐 */\n  z-index: 0; /* 将 image 设置在底部 */\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEAEpBC,mBAAA,CAEI,WAFD,mCAEH;gEACAA,mBAAA,CAEI,WAFD,sCAEH;;;;;;;uBAPFC,mBAAA,CAcM,OAdNC,UAcM,GAbJF,mBAAA,CAAkB,YAAAG,gBAAA,CAAXC,MAAA,CAAAC,GAAG,kBACVC,UAEI,EACJC,UAEI,E,gBACJP,mBAAA,CAA6F;+DAA7EQ,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,WAAW,EAAC,WAAW;IAAEC,KAAK,EAAE;MAAAC,KAAA;MAAAC,MAAA;IAAA;iDAAxCN,KAAA,CAAAC,MAAM,E,GACtBM,mBAAA,6CAA8C,EAC9Cf,mBAAA,CAAuC;IAA9BgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,MAAI,G,CACpBV,KAAA,CAAAa,MAAM,I,cAAhBpB,mBAAA,CAAgC,KAAAqB,UAAA,EAAd,YAAU,K,oCAChBd,KAAA,CAAAa,MAAM,I,cAAlBpB,mBAAA,CAA8F;;IAAzEF,KAAK,EAAC,SAAS;IAAEwB,GAAG,EAAEC,OAAO;IAA0BC,GAAG,EAAC;4EAChFzB,mBAAA,CAAiC;IAA3BD,KAAK,EAAC,OAAO;IAAEwB,GAAG,EAAEf,KAAA,CAAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}